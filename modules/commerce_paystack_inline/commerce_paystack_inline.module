<?php

/**
 * @file
 * Implements PayStack inline checkout (pop-up) in Drupal Commerce checkout.
 */


/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_paystack_inline_commerce_payment_method_info() {
  $payment_methods['paystack_inline'] = array(
    'base' => 'commerce_paystack_inline',
    'title' => t('PayStack Inline'),
    'short_title' => t('PayStack Inline'),
    'description' => t('PayStack Inline for Drupal Commerce'),
    'terminal' => FALSE,
    'offsite' => FALSE,
    'active' => TRUE,
  );

  return $payment_methods;
}

/**
 * Payment method callback: settings form.
 */
function commerce_paystack_inline_settings_form($settings = array()) {
  return commerce_paystack_settings_form($settings);
}

/**
 * Payment method callback: checkout form.
 */
function commerce_paystack_inline_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  global $user;

  // Create a new payment transaction to represent this payment attempt.
  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $currency_code = $payment_method['settings']['currency_code'];
  $order_currency_code = $wrapper->commerce_order_total->currency_code->value();
  $amount = commerce_currency_amount_to_decimal(
    commerce_currency_convert($wrapper->commerce_order_total->amount->value(), $order_currency_code, $currency_code),
    $currency_code
  );
  $transaction = commerce_payment_transaction_new(
    'paystack_inline',
    $order->order_id
  );
  $transaction->instance_id = $payment_method['method_id'];
  $transaction->status = COMMERCE_PAYMENT_STATUS_PENDING;
  $transaction->amount = $amount * 100;
  $transaction->currency_code = $currency_code;
  commerce_payment_transaction_save($transaction);

  // Create the PayStack form.
  $form = array();
  $form['#attached']['js'][] = array(
    'data' => 'https://js.paystack.co/v1/inline.js',
    'type' => 'external'
  );

  $form['pay'] = array(
    '#type' => 'button',
    '#button_type' => 'button',
    '#value' => t('Pay with PayStack'),
    '#attributes' => array('onclick' => array('payWithPaystack()')),
  );

  // Create and insert the PayStack script.
  $script = <<<SCRIPT
  function payWithPaystack(){
    var handler = PaystackPop.setup({
      key: {$payment_method['settings']['public_key']},
      email: '$user->mail',
      amount: $amount,
      ref: "$transaction->transaction_id",
    });
    handler.openIframe();
  }
SCRIPT;
  drupal_add_js($script, 'inline');

  return $form;
}